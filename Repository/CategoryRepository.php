<?php

namespace Synduit\SynpostDatabaseBundle\Repository;

use Doctrine\ODM\MongoDB\DocumentRepository;
use Synduit\SynpostDatabaseBundle\Document\Category;

/**
 * CategoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CategoryRepository extends DocumentRepository
{
    public function createCategory($values)
    {
        $category = new Category();
        $category->setDomain($values['domain']);
        $this->prepareFields($category, $values);

        $dm = $this->getDocumentManager();
        $dm->persist($category);

        return $category;
    }

    public function findCategoryByName($domain, $name)
    {
        return $this->findOneBy(
            array(
              'domain' => $domain->getId(),
              'name' => new \MongoRegex('/^' . $name . '$/i'),
            )
        );
    }

    public function findCategories($domain, $limit = null, $offset = null)
    {
        return $this->findBy(
            array(
              'domain' => $domain->getId(),
            ), null, $limit, $offset
        );
    }

    public function updateCategory($category, $values)
    {
        $this->prepareFields($category, $values);
    }

    /**
     * Set values to Documents.
     */
    private function prepareFields(&$category, $values)
    {
        $category->setName($values['name']);
        $category->setType($values['type']);
    }

    public function deleteCategory($category)
    {
        $dm = $this->getDocumentManager();
        $dm->remove($category);
    }

    public function countCategories($domain, $parameters = array()) {
        $query = $this->createQueryBuilder();
        $query->count();
        $query->field('domain')->equals($domain->getId());

        return $query->getQuery()->execute();
    }
}
