<?php

namespace Synduit\SynpostDatabaseBundle\Repository;

use Doctrine\ODM\MongoDB\DocumentRepository;
use Synduit\SynpostDatabaseBundle\Document\AutoResponder;


/**
 * AutoResponderRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AutoResponderRepository extends DocumentRepository
{
    public function createAutoResponder($values)
    {
        $auto_responder = new AutoResponder();
        $auto_responder->setDomain($values['domain']);
        $this->prepareFields($auto_responder, $values);
        $dm = $this->getDocumentManager();
        $dm->persist($auto_responder);

        return $auto_responder;
    }

    public function findAutoResponderByName($domain, $name)
    {
        return $this->findOneBy(
            array(
              'name' => new \MongoRegex('/^' . $name . '$/i'),
              'domain' => $domain->getId(),
            )
        );
    }

    public function updateAutoResponder($auto_responder, $values)
    {
        $this->prepareFields($auto_responder, $values);
    }

    /**
     * Set values to Documents.
     */
    private function prepareFields(&$auto_responder, $values)
    {
        $auto_responder->setName($values['name']);
        $auto_responder->setBody($values['body']);
        $auto_responder->setSubject($values['subject']);
    }

    public function deleteAutoResponder($autoresponder)
    {
        $dm = $this->getDocumentManager();
        $dm->remove($autoresponder);
    }

    public function findAutoResponders($domain, $limit = null, $offset = null)
    {
        return $this->findBy(
            array(
              'domain' => $domain->getId(),
            ), null, $limit, $offset
        );
    }

    public function countAutoresponders($domain, $parameters = array()) {
        $query = $this->createQueryBuilder();
        $query->count();
        $query->field('domain')->equals($domain->getId());

        return $query->getQuery()->execute();
    }
}
